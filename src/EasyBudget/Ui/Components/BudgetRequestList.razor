@using GridBlazor.Pagination
@using EasyBudget.Common.DataAccess.Dtos
@using GridShared.Utility
@using DocumentFormat.OpenXml.Drawing.Charts
@using DocumentFormat.OpenXml.Office2016.Drawing.Charts
@using EasyBudget.Business.Services
@using GridShared
@using GridShared.Pagination
@using GridShared.Totals
@using Microsoft.Extensions.Primitives


@if (true)
{
    <div class="list-view-container">
        <div class="list-view-table">
            <table>
                <tr>
                    <th>
                        <input type="checkbox" @onchange="args  => {MainCheckboxClicked(args); }">
                    </th>
                    <th>Назва</th>
                    <th>Ініціатор</th>
                    <th>Клініка</th>
                    <th>Дата запиту</th>
                    <th>Відділ</th>
                    <th>State</th>
                </tr>
                @{
                    if (ViewModel.Total - ViewModel.PageSize * ViewModel.PageNumber > 0)
                    {
                        @for (int i = ViewModel.PageSize * (ViewModel.PageNumber - 1); i < ViewModel.PageSize * ViewModel.PageNumber; i++)
                        {
                            BudgetRequestRowViewModel budgetRequest = ViewModel.BudgetRequests[i];
                            <tr>
                                <td>
                                    <input type="checkbox" @bind="budgetRequest.IsSelected" />
                                </td>
                                <td>@budgetRequest.BudgetRequest.Name</td>
                                <td>@budgetRequest.BudgetRequest.RequesterName</td>
                                <td>@budgetRequest.BudgetRequest.UnitName</td>
                                <td>@budgetRequest.BudgetRequest.DateRequested.ToString("d")</td>
                                <td>@budgetRequest.BudgetRequest.DepartmentName</td>
                                <td>@budgetRequest.BudgetRequest.State.ToString()</td>
                            </tr>
                        }
                    }
                    else
                    {
                        @for (int i = ViewModel.PageSize * (ViewModel.PageNumber - 1); i < ViewModel.Total; i++)
                        {
                            BudgetRequestRowViewModel budgetRequest = ViewModel.BudgetRequests[i];
                            <tr>
                                <td>
                                    <input type="checkbox" @bind="budgetRequest.IsSelected" />
                                </td>
                                <td>@budgetRequest.BudgetRequest.Name</td>
                                <td>@budgetRequest.BudgetRequest.RequesterName</td>
                                <td>@budgetRequest.BudgetRequest.UnitName</td>
                                <td>@budgetRequest.BudgetRequest.DateRequested.ToString("d")</td>
                                <td>@budgetRequest.BudgetRequest.DepartmentName</td>
                                <td>@budgetRequest.BudgetRequest.State.ToString()</td>
                            </tr>
                        }
                    }
                }
            </table>
        </div>
        <div class="list-view-bottom">
            <div class="list-view-combo">
                <span style="color: red">Page</span>
                <select @bind="ViewModel.PageNumber" >
                    @for (int i = 0; i < ViewModel.Total / ViewModel.PageSize; i++)
                    {
                        <option>@(i + 1)</option>
                    }
                </select>
                    
                <div class="common-button-div">
                    @if (ViewModel.PageNumber != 1)
                    {
                        <button @onclick="() => { PageButtonCLicked(ViewModel.PageNumber-1); }">prev</button>
                    }
                    else
                    {
                        <button disabled="disabled">prev</button>
                    }

                </div>
                <div class="common-button-div">
                    @if (ViewModel.Total - ViewModel.PageSize * ViewModel.PageNumber > 0)
                    {
                        <button @onclick="() => { PageButtonCLicked(ViewModel.PageNumber+1); }">next</button>
                    }
                    else
                    {
                        <button disabled="disabled">next</button>
                    }
                    
                </div>
            </div>
            <div class="list-view-buttons">
                <div class="common-button-div">
                    <button @onclick="OngoingListButtonClick">Button1</button>
                </div>
                <div class="common-button-div">
                    <button @onclick="ApproveCheckedListButtonCLick">Затвердити</button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    [Parameter]
    public IBudgetRequestListViewModel ViewModel { get; set; }

    private Task _task;
    private void OngoingListButtonClick()
    {

    }
    private void ApproveCheckedListButtonCLick()
    {
        ViewModel.ApproveRequests();
    }

    private void MainCheckboxClicked(ChangeEventArgs args)
    {
        bool value = (bool) args.Value;
        foreach (BudgetRequestRowViewModel row in ViewModel.BudgetRequests)
        {
            row.IsSelected = value;
        }

        this.StateHasChanged();
    }

    private void PageButtonCLicked(int k)
    {
        if (ViewModel.Total - ViewModel.PageSize * ViewModel.PageNumber > 0)
        {
            for (int i = ViewModel.PageSize * (ViewModel.PageNumber - 1); i < ViewModel.PageSize * ViewModel.PageNumber; i++)
            {
                ViewModel.BudgetRequests[i].IsSelected = false;
            }
        }
        else
        {
            for (int i = ViewModel.PageSize * (ViewModel.PageNumber - 1); i < ViewModel.Total; i++)
            {
                ViewModel.BudgetRequests[i].IsSelected = false;
            }
        }
        ViewModel.PageNumber = k;
        base.StateHasChanged();
    }
}
