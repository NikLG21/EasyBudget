@using EasyBudget.Common.DataAccess.Dtos
@using EasyBudget.Business.Services
@using Microsoft.Extensions.Primitives
@using System.Data.SqlClient
@using EasyBudget.Common.Model
@using EasyBudget.Common.Model.Security
@using EasyBudget.Presentation.Enums


@if (true)
{
    <div class="list-view-container">
        <div class="list-view-top">
            <div class="list-view-table">
                <table>
                    <tr>
                        <th>
                            <input type="checkbox" @onchange="args => { MainCheckboxClicked(args); }">
                        </th>
                        <th>Назва</th>
                        @{
                            if (ViewModel.Sorting.Entity == SortingEntity.Requester)
                            {
                                if (ViewModel.Sorting.Direction)
                                {
                                    <th>Ініціатор<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Requester, false); })"><i class='fas fa-sort-up'></i></button></th>
                                }
                                else
                                {
                                    <th>Ініціатор<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Requester, true); })"><i class="fa fa-sort-down"></i></button></th>
                                }

                            }
                            else
                            {
                                <th>Ініціатор<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Requester, false); })"><i class="fa fa-sort"></i></button></th>
                            }
                            if (ViewModel.Sorting.Entity == SortingEntity.Unit)
                            {
                                if (ViewModel.Sorting.Direction)
                                {
                                    <th>Клініка<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Unit, false); })"><i class='fas fa-sort-up'></i></button></th>
                                }
                                else
                                {
                                    <th>Клініка<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Unit, true); })"><i class="fa fa-sort-down"></i></button></th>
                                }

                            }
                            else
                            {
                                <th>Клініка<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Unit, false); })"><i class="fa fa-sort"></i></button></th>
                            }
                            if (ViewModel.Sorting.Entity == SortingEntity.DateRequested)
                            {
                                if (ViewModel.Sorting.Direction)
                                {
                                    <th>Дата запиту<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.DateRequested, false); })"><i class='fas fa-sort-up'></i></button></th>
                                }
                                else
                                {
                                    <th>Дата запиту<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.DateRequested, true); })"><i class="fa fa-sort-down"></i></button></th>
                                }

                            }
                            else
                            {
                                <th>Дата запиту<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.DateRequested, false); })"><i class="fa fa-sort"></i></button></th>
                            }
                            if (ViewModel.Sorting.Entity == SortingEntity.Department)
                            {
                                if (ViewModel.Sorting.Direction)
                                {
                                    <th>Відділ<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Department, false); })"><i class='fas fa-sort-up'></i></button></th>
                                }
                                else
                                {
                                    <th>Відділ<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Department, true); })"><i class="fa fa-sort-down"></i></button></th>
                                }

                            }
                            else
                            {
                                <th>Відділ<button class="common-button-icon-sort" @onclick="(() => { ViewModel.ChangeSorting(SortingEntity.Department, false); })"><i class="fa fa-sort"></i></button></th>
                            }
                        }
                        <th>Стадія</th>
                        <th></th>
                        <th></th>
                    </tr>
                    @{
                        foreach (BudgetRequestRowViewModel budgetRequest in ViewModel.PageBudgetRequests)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" @bind="budgetRequest.IsSelected"/>
                                </td>
                                <td >@budgetRequest.BudgetRequest.Name</td>
                                <td>@budgetRequest.BudgetRequest.RequesterName</td>
                                <td>@budgetRequest.BudgetRequest.UnitName</td>
                                <td>@budgetRequest.BudgetRequest.DateRequested.ToString("d")</td>
                                <td>@budgetRequest.BudgetRequest.DepartmentName</td>
                                <td>@budgetRequest.BudgetRequest.State.GetLocalizationState()</td>
                                <td>
                                    
                                    <button class="common-button-icon-sort" @onclick="() => ViewModel.OpenBudgetRequest(budgetRequest.BudgetRequest.Id)"><i class="material-icons">pageview</i></button>
                                </td>
                                <td>
                                    @{
                                        if (budgetRequest.IsApproveable)
                                        {
                                            <button>&#9989;</button>
                                        }

                                    }
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
            <div class="list-view-filters">
                <div class="list-view-filter">
                    <span>Ініціатор</span>
                    <select @bind="ViewModel.FilterViewModel.Requester">
                        <option value="@Guid.Empty"></option>
                        @{
                            foreach (PairGuid pair in ViewModel.FilterViewModel.Requesters)
                            {
                                <option value="@pair.Key">@pair.Value</option>
                            }
                        }

                    </select>
                </div>
                <div class="list-view-filter">
                    <span>Клініка</span>
                    <select @bind="ViewModel.FilterViewModel.Unit">
                        <option value="@Guid.Empty"></option>
                        @{
                            foreach (PairGuid pair in ViewModel.FilterViewModel.Units)
                            {
                                <option value="@pair.Key">@pair.Value</option>
                            }
                        }

                    </select>
                </div>
                <div class="list-view-filter">
                    <span>Відділ</span>
                    <select @bind="ViewModel.FilterViewModel.Department">
                        <option value="@Guid.Empty"></option>
                        @{
                            foreach (PairGuid pair in ViewModel.FilterViewModel.Departments)
                            {
                                <option value="@pair.Key">@pair.Value</option>
                            }
                        }
                    </select>
                </div>
                <div class="list-view-filter">
                    <span>State</span>
                    <select @bind="ViewModel.FilterViewModel.State">
                        <option value="@BudgetState.Undefined">@BudgetState.Undefined.GetLocalizationState()</option>
                        @{
                            foreach (PairEnum<BudgetState> state in ViewModel.FilterViewModel.States)
                            {
                                <option value="@state.Key">@state.Value</option>
                            }
                        }

                    </select>
                </div>
                <div class="list-view-filter">
                    <label>З</label>
                    <input type="date" @bind-value="ViewModel.FilterViewModel.From" />
                    <label>До</label>
                    <input type="date" @bind-value="ViewModel.FilterViewModel.To" />
                </div>
                <div>
                    @if (!ViewModel.FilterViewModel.SelectedFilterIsActive)
                    {
                        <button @onclick="(() => { ViewModel.FilterViewModel.SelectedFilterIsActive = true;ViewModel.ApplySelection(); })">Вибрані в окремий список</button>
                    }
                    else
                    {
                        <button @onclick="(() => { ViewModel.FilterViewModel.SelectedFilterIsActive = false;ViewModel.ApplySelection(); })">Повний список</button>
                    }
                </div>
                <div class="common-button-div">
                    @if (!ViewModel.FilterViewModel.OnGoingFilterIsActive)
                    {
                        <button @onclick="(() => { ViewModel.FilterViewModel.OnGoingFilterIsActive = true; ViewModel.OnGoingList(); })">OnGoingList</button>
                    }
                    else
                    {
                        <button @onclick="(() => { ViewModel.FilterViewModel.OnGoingFilterIsActive = false; ViewModel.OnGoingList();})">Повний список</button>
                    }
                </div>
            </div>
        </div>
        <div class="list-view-bottom">
            <div class="list-view-combo">
                <span style="color: red">Сторінка</span>
                <div class="common-button-div">
                    @if (ViewModel.PageNumber != 1)
                    {
                        <button @onclick="() => { ViewModel.PageNumber -= 1; }">Попередня</button>
                    }
                    else
                    {
                        <button disabled="disabled">Попередня</button>
                    }
                </div>
                <select @bind="ViewModel.PageNumber">

                    @for (int i = 0; i < ViewModel.Total / ViewModel.PageSize; i++)
                    {
                        <option>@(i + 1)</option>
                    }
                    @if (ViewModel.Total / ViewModel.PageSize != (double)ViewModel.Total / (double)ViewModel.PageSize)
                    {
                        <option>@(ViewModel.Total / ViewModel.PageSize + 1)</option>
                    }
                </select>
                <div class="common-button-div">
                    @if (ViewModel.Total - ViewModel.PageSize * ViewModel.PageNumber > 0)
                    {
                        <button @onclick="() => { ViewModel.PageNumber += 1; }">Наступна</button>
                    }
                    else
                    {
                        <button disabled="disabled">Наступна</button>
                    }
                </div>
                <span style="color: red">На сторінці:</span>
                <select @bind="ViewModel.PageSize">
                    <option>2</option>
                    <option>3</option>
                    <option>10</option>
                    <option>15</option>
                    <option>20</option>
                </select>
            </div>
            <div class="list-view-buttons">
                <div class="common-button-div">
                    <button @onclick="ApproveCheckedListButtonCLick">Затвердити</button>
                </div>
                <div class="common-button-div">
                    <button @onclick="ViewModel.NewBudgetRequest">Створити новий запит</button>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    [Parameter]
    public IBudgetRequestListViewModel ViewModel { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ViewModel.ViewModelChanged += () => this.InvokeAsync(StateHasChanged);
        }
        
        await base.OnAfterRenderAsync(firstRender);
    }

    private Task _task;
    private void ApproveCheckedListButtonCLick()
    {
        ViewModel.ApproveRequests();
    }

    private void MainCheckboxClicked(ChangeEventArgs args)
    {
        bool value = (bool) args.Value;
        foreach (BudgetRequestRowViewModel row in ViewModel.BudgetRequests)
        {
            row.IsSelected = value;
        }
        this.StateHasChanged();
    }

}
